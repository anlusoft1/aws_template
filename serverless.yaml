service: ${self:custom.region-name.${self:custom.stg_cmo}}MTO${self:custom.stg_cmo_upper}ANLUTESTV3
custom: ${file(customConfig.yml)} 
provider:
  name: aws
  apiGateway:
    restApiId: 
      'Fn::ImportValue': MyApiGateway-restApiId-${self:custom.nom_project}
    restApiRootResourceId: 
      'Fn::ImportValue': MyApiGateway-rootResourceId-${self:custom.nom_project}
  runtime: nodejs14.x
  region: ${self:custom.region.${self:custom.stg_cmo}}
  stage: ${opt:stage}
  timeout: 60
  memorySize: 256
  versionFunctions: false
  deploymentBucket:
    name: ${self:custom.bucketDeploy.${self:custom.stg_cmo}}
    serverSideEncryption: AES256
  role: "${self:custom.role.${self:custom.stg_cmo}}"
  vpc:
    securityGroupIds:
      - ${self:custom.security-group-id.${self:custom.stg_cmo}}
    subnetIds:
resources:
    Resources:
      MyApiGW:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
          Name: "${self:custom.nom_api_rest}001"
          Description: API DE SERVICIOS
    Outputs:
      apiGatewayRestApiId:
        Value:
          Ref: MyApiGW
        Export:
          Name: MyApiGateway-restApiId-${self:custom.nom_project}
      apiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - MyApiGW
            - RootResourceId
        Export:
          Name: MyApiGateway-rootResourceId-${self:custom.nom_project}
package:
  individually: true
  exclude:
    - node_modules/**
    - LMBHELLO/**
    - LMBHELLO2/**
    - ./**.json
    - ./**.yml
    - npm-cache/**
    - ./**.sh
    - Jenkinsfile
functions:
  - ${file(LMBHELLO/lambda_definition.yml)}  
  - ${file(LMBHELLO2/lambda_definition.yml)}  